{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\thapa\\\\src\\\\ToDoList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from '@mui/icons-material/Add';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ToDoList = () => {\n  _s();\n  const [item, setItem] = useState(\"Buy an Apple\");\n  const [newitem, setNewItem] = useState([]);\n  const itemEvent = event => {\n    setItem(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main_div\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center_div\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" ToDo List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Add an Item\",\n          onChange: itemEvent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"newBtn\",\n          children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: newitem.map(val => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: val\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 16\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_s(ToDoList, \"FrpIEnEALGwFXnAwHFEza1Jdv9Q=\");\n_c = ToDoList;\nexport default ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useState","Button","AddIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","ToDoList","_s","item","setItem","newitem","setNewItem","itemEvent","event","target","value","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","map","val","_c","$RefreshReg$"],"sources":["D:/React/thapa/src/ToDoList.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from '@mui/icons-material/Add';\r\n\r\nconst ToDoList =  () => {\r\n    const[item, setItem] = useState(\"Buy an Apple\");\r\n    const[newitem, setNewItem] = useState([]);\r\n    const itemEvent = (event) => {\r\nsetItem(event.target.value)\r\n    }\r\n\r\nreturn(\r\n    <>\r\n    <div className='main_div'>\r\n<div className='center_div'>\r\n<br />\r\n<h1> ToDo List</h1>\r\n<br />\r\n<input type=\"text\" placeholder=\"Add an Item\" onChange={itemEvent}/>\r\n<Button className=\"newBtn\">\r\n    <AddIcon />\r\n</Button>\r\n<br />\r\n<ol>\r\n    {newitem.map((val) =>{\r\n        return <li>{val}</li>\r\n    })}\r\n</ol>\r\n<br />\r\n</div>\r\n    </div>\r\n    </>\r\n)\r\n}\r\nexport default ToDoList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,0BAA0B;AAC7C,OAAOC,OAAO,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE9C,MAAMC,QAAQ,GAAIA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAK,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,cAAc,CAAC;EAC/C,MAAK,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACzC,MAAMa,SAAS,GAAIC,KAAK,IAAK;IACjCJ,OAAO,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACvB,CAAC;EAEL,oBACIZ,OAAA,CAAAE,SAAA;IAAAW,QAAA,eACAb,OAAA;MAAKc,SAAS,EAAC,UAAU;MAAAD,QAAA,eAC7Bb,OAAA;QAAKc,SAAS,EAAC,YAAY;QAAAD,QAAA,gBAC3Bb,OAAA;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACNlB,OAAA;UAAAa,QAAA,EAAI;QAAU;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnBlB,OAAA;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACNlB,OAAA;UAAOmB,IAAI,EAAC,MAAM;UAACC,WAAW,EAAC,aAAa;UAACC,QAAQ,EAAEZ;QAAU;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACnElB,OAAA,CAACH,MAAM;UAACiB,SAAS,EAAC,QAAQ;UAAAD,QAAA,eACtBb,OAAA,CAACF,OAAO;YAAAiB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CAAC,eACTlB,OAAA;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACNlB,OAAA;UAAAa,QAAA,EACKN,OAAO,CAACe,GAAG,CAAEC,GAAG,IAAI;YACjB,oBAAOvB,OAAA;cAAAa,QAAA,EAAKU;YAAG;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UACzB,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACLlB,OAAA;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG;EAAC,gBACJ,CAAC;AAEP,CAAC;AAAAd,EAAA,CA7BKD,QAAQ;AAAAqB,EAAA,GAARrB,QAAQ;AA8Bd,eAAeA,QAAQ;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}